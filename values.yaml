product:
  name: onlyoffice

connections:
  dbHost: postgresql
  dbUser: postgres
  dbPort: "5432"
  redisHost: redis-master
  amqpHost: rabbitmq
  amqpUser: user
  amqpProto: amqp

persistence:
  storageClass: "nfs"
  size: 8Gi

metrics:
  enabled: false

example:
  enabled: false
  containerImage: onlyoffice/docs-example:6.4.2.6

docservice:
  replicas: 1
  readinessProbeEnabled: true
  readinessProbe:
    failureThreshold: 2
    httpGet:
      path: /index.html
      port: 8000
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbeEnabled: true
  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /index.html
      port: 8000
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  startupProbeEnabled: true
  startupProbe:
    httpGet:
      path: /index.html
      port: 8000
    failureThreshold: 30
    periodSeconds: 10
  containerImage: onlyoffice/4testing-ds-docservice:6.4.2-eu-r2
  resources:
    ##Example:
    ##requests:
    ##  memory: "256Mi"
    ##  cpu: "100m"
    requests: {}
    ##limits:
    ##  memory: "2Gi"
    ##  cpu: "1000m"
    limits: {}

proxy:
  livenessProbeEnabled: true
  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /index.html
      port: 8888
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  startupProbeEnabled: true
  startupProbe:
    httpGet:
      path: /index.html
      port: 8888
    failureThreshold: 30
    periodSeconds: 10
  proxyContainerImage: onlyoffice/4testing-ds-proxy:6.4.2-eu-r2
  resources:
    ##Example:
    ##requests:
    ##  memory: "256Mi"
    ##  cpu: "100m"
    requests: {}
    ##limits:
    ##  memory: "2Gi"
    ##  cpu: "1000m"
    limits: {}

converter:
  replicas: 1
  containerImage: onlyoffice/4testing-ds-converter:6.4.2-eu-r2
  resources:
    ##Example:
    ##requests:
    ##  memory: "256Mi"
    ##  cpu: "100m"
    requests: {}
    ##limits:
    ##  memory: "2Gi"
    ##  cpu: "1000m"
    limits: {}

jwt:
  enabled: true
  secret: MYSECRET

service:
  type: ClusterIP
  port: 8888

ingress:
  enabled: false
  ssl:
    enabled: false
    host: ifeneg.ru
    secret: tls
grafana_ingress:
  enabled: false
